/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/* Layers */
#define BASE 0
#define SYM 1
#define NUM 2
#define TOP 3

/ {
    combos {
        compatible = "zmk,combos";

        combo_bootl {
            timeout-ms = <50>;
            key-positions = <0 1 2>;
            bindings = <&bootloader>;
			require-prior-idle-ms = <3000>;
        };

        combo_reset {
            timeout-ms = <50>;
            key-positions = <9 10 11>;
            bindings = <&sys_reset>;
			require-prior-idle-ms = <3000>;
        };

        combo_softoff {
            timeout-ms = <50>;
            key-positions = <42 43 44>;
            bindings = <&soft_off>;
			require-prior-idle-ms = <3000>;
        };

        combo_btclr {
            timeout-ms = <50>;
            key-positions = <12 13 14>;
            bindings = <&bt BT_CLR>;
			require-prior-idle-ms = <3000>;
        };

        combo_btclrall {
            timeout-ms = <50>;
            key-positions = <34 35 36>;
            bindings = <&bt BT_CLR_ALL>;
			require-prior-idle-ms = <3000>;
        };
    };

    macros {
        bl_key: bl_key {
            compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <600>;
            bindings = <&kp N5 &kp N5 &kp N7 &kp N7 &kp N0 &kp N0 &kp N0 &kp N8 &kp N3 &kp N5 &kp N8 &kp N9 &kp N1 &kp N2 &kp N5 &kp N8 &kp N7 &kp N3 &kp N5 &kp N4 &kp N5 &kp N2 &kp N9 &kp N2 &kp N7 &kp N1 &kp N9 &kp N1 &kp N2 &kp N5 &kp N3 &kp N3 &kp N9 &kp N3 &kp N6 &kp N1 &kp N3 &kp N1 &kp N5 &kp N9 &kp N3 &kp N1 &kp N3 &kp N5 &kp N8 &kp N5 &kp N3 &kp N4>;
        };
    };

    behaviors {
        rot_td: rot_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        ble_encoder: ble_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };
    };

/*   conditional_layers {
 *       compatible = "zmk,conditional-layers";
 *       tri_layer {
 *           if-layers = <SYM NUM>;
 *           then-layer = <TOP>;
 *     };
 * };
*/
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";
            #sensor-binding-cells = <2>;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
                &kp TAB    &kp Q      &kp W      &kp F     &kp P     &kp G               &kp J      &kp L      &kp U      &kp Y     &kp SEMI  &kp BSPC
                &key_repeat   &kp A      &kp R      &kp S     &kp T     &kp D               &kp H      &kp N      &kp E      &kp I     &kp O     &kp APOS
                &kp LSHFT  &kp Z      &kp X      &kp C     &kp V     &kp B    &rot_td	 &kp K      &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp ENTER
                &kp LCTRL  &kp PSCRN  &kp LALT   &kp LGUI  &lt SYM ESC &kp BSPC  &mo TOP	 &kp SPACE  &mo NUM   &kp LGUI  &kp PSCRN  &kp LEFT   &kp RIGHT
            >;
        };

        sym_layer {
            display-name = "sym";
            sensor-bindings = <&inc_dec_kp C_BRI_INC C_BRI_DEC>;
            bindings = <
                &kp GRAVE &kp EXCL  &kp AT     &kp HASH &kp DLLR     &kp PRCNT				&kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR  &kp DEL
				&trans    &kp UNDER &kp PLUS   &kp LBRC &kp RBRC     &kp PIPE				&kp LEFT  &kp DOWN &kp UP    &kp RIGHT &kp TILDE &kp EQUAL
                &trans    &trans    &trans     &kp CAPS &kp C_VOL_DN &kp C_VOL_UP &trans	&trans    &trans   &trans    &trans    &trans    &trans
                &trans    &trans    &trans     &trans   &trans       &trans       &trans	&trans    &trans   &trans    &trans    &trans    &trans
            >;
        };

        num_layer {
            display-name = "num";
            sensor-bindings = <&inc_dec_kp C_BRI_INC C_BRI_DEC>;
            bindings = <
                &kp GRAVE &kp N1    &kp N2    &kp N3   &kp N4   &kp N5			  &kp N6	&kp N7   &kp N8   &kp N9   &kp N0	 &kp DEL
                &trans    &kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp NUBS		  &kp LBRC  &kp LBKT &kp RBKT &kp RBRC &kp GRAVE &kp PLUS
                &kp F1		  &kp F2		&kp F2		  &kp F4	   &kp F5		&kp F6		 &trans   &kp F7		&kp F8		 &kp F9	  &kp F10		&kp F11	 &kp F12
                &trans    &trans    &trans    &trans   &trans   &trans   &trans   &trans	&trans   &trans   &trans    &trans   &trans
            >;
        };

        top_layer {
            display-name = "top";
            sensor-bindings = <&inc_dec_kp C_BRI_INC C_BRI_DEC>;
            bindings = <
                &none &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4			&bl_key	     &none &none &none &none &none
                &none &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4			&out OUT_TOG &none &none &none &none &none
                &none &none         &none         &none         &none         &none         &trans	&none		 &none &none &none &none &none
                &none &none         &none         &none         &none         &none         &trans	&none        &none &none &none &none &none
            >;
        };
    };
};
